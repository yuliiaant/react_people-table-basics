{"version":3,"sources":["components/Loader/Navbar.tsx","App.tsx","components/Loader/HomePage.tsx","api.ts","types/ErrorMessages.tsx","PeopleContext.tsx","utils/functions.ts","components/Loader/Loader.tsx","utils/constants.ts","components/Loader/PersonLink.tsx","components/Loader/PersonRow.tsx","components/Loader/PeopleTable.tsx","components/Loader/PeoplePage.tsx","components/Loader/NotFoundPage.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Navigation","className","role","to","App","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ErrorMessages","PeopleContext","React","createContext","peopleList","isLoading","errorMessage","PostsProvider","children","useState","setPeopleList","setIsLoading","NoError","setErrorMessage","loadPeople","useEffect","peopleFromServer","map","person","mother","find","name","motherName","father","fatherName","getPreparedPeople","catch","LoadError","finally","value","useMemo","Provider","Loader","columnNames","PersonLink","sex","slug","PersonRow","peopleSlug","born","died","PeopleTable","useContext","useParams","columnName","PeoplePage","SomethingWentWrong","length","NoPeople","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.8bad7690.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={getLinkClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navigation } from './components/Loader/Navbar';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum ErrorMessages {\n  NoError = '',\n  LoadError = 'Unable to load people',\n  SomethingWentWrong = 'Something went wrong',\n  NoPeople = 'There are no people on the server',\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Person } from './types';\nimport { getPeople } from './api';\nimport { ErrorMessages } from './types/ErrorMessages';\nimport { getPreparedPeople } from './utils/functions';\n\ninterface PeopleContextType {\n  peopleList: Person[];\n  isLoading: boolean;\n  errorMessage: string;\n}\n\nexport const PeopleContext = React.createContext<PeopleContextType>({\n  peopleList: [],\n  isLoading: false,\n  errorMessage: '',\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PostsProvider: React.FC<Props> = ({ children }) => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(ErrorMessages.NoError);\n\n  const loadPeople = useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeopleList(getPreparedPeople(peopleFromServer));\n      })\n      .catch(() => {\n        setErrorMessage(ErrorMessages.LoadError);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const value = useMemo(() => ({\n    peopleList,\n    isLoading,\n    errorMessage,\n    loadPeople,\n  }), [peopleList, isLoading, errorMessage]);\n\n  return (\n    <PeopleContext.Provider value={value}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import { Person } from '../types';\n\nexport const getPreparedPeople = (peopleList: Person[]) => {\n  return peopleList.map(person => {\n    return {\n      ...person,\n      mother: peopleList\n        .find(mother => mother.name === person.motherName),\n      father: peopleList\n        .find(father => father.name === person.fatherName),\n    };\n  });\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const columnNames = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\nexport const NO_PARENT = '-';\nexport const SEX_FEMALE = 'f';\nexport const SEX_MALE = 'm';\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { SEX_FEMALE } from '../../utils/constants';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      className={classNames({\n        'has-text-danger': person.sex === SEX_FEMALE,\n      })}\n      to={`/people/${person.slug}`}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from './PersonLink';\nimport { NO_PARENT } from '../../utils/constants';\n\ntype Props = {\n  person: Person,\n  peopleSlug?: string,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person, peopleSlug }) => {\n  const {\n    slug, sex, born, died, motherName, fatherName, mother, father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': peopleSlug === slug,\n      })}\n    >\n      <td><PersonLink person={person} /></td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || NO_PARENT\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || NO_PARENT\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PeopleContext } from '../../PeopleContext';\nimport { columnNames } from '../../utils/constants';\nimport { PersonRow } from './PersonRow';\n\nexport const PeopleTable: React.FC = () => {\n  const { peopleList } = useContext(PeopleContext);\n  const { peopleSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {columnNames.map(columnName => (\n            <th key={columnName}>{columnName}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleList.map(person => (\n          <PersonRow\n            person={person}\n            peopleSlug={peopleSlug}\n            key={person.slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useContext } from 'react';\nimport { PeopleContext } from '../../PeopleContext';\nimport { ErrorMessages } from '../../types/ErrorMessages';\nimport { Loader } from '.';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const { peopleList, isLoading, errorMessage } = useContext(PeopleContext);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (<Loader />)}\n\n          {errorMessage === ErrorMessages.LoadError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {ErrorMessages.SomethingWentWrong}\n            </p>\n          )}\n\n          {(!peopleList.length && !isLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              {ErrorMessages.NoPeople}\n            </p>\n          )}\n\n          {!!peopleList.length && (\n            <PeopleTable />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/Loader/HomePage';\nimport { PeoplePage } from './components/Loader/PeoplePage';\nimport { PostsProvider } from './PeopleContext';\nimport { NotFoundPage } from './components/Loader/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <PostsProvider>\n      <HashRouter>\n        <Routes>\n          <Route path=\"/\" element={<App />}>\n            <Route index element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people/:peopleSlug?\" element={<PeoplePage />} />\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Route>\n        </Routes>\n      </HashRouter>\n    </PostsProvider>,\n  );\n"],"sourceRoot":""}